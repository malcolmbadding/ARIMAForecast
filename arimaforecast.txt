import pandas as pd
from pandas import datetime
import matplotlib.pyplot as plt

def parser(x):
    return datetime.strptime(x,'%m/%d/%Y')

calls = pd.read_csv('cicdata.csv',index_col=0, parse_dates=[0] ,date_parser=parser)

calls.head()

calls.plot()

from statsmodels.graphics.tsaplots import plot_acf
plot_acf(calls)

calls.shift(1)

calls_diff = calls.diff(periods=1)

calls_diff = calls_diff[1:]
calls_diff.head()

plot_acf(calls_diff)

calls_diff.plot()

X = calls.values
train = X[0:170]
test = X[170:] 
predictions = []

train.size

from statsmodels.tsa.arima_model import ARIMA
from statsmodels.tsa.ar_model import AR
from sklearn.metrics import mean_squared_error

#p,d,q  p = periods taken for autoregressive model
#d -> Integrated order, difference
# q periods in moving average model
model_arima = ARIMA(train,order=(4,1,7))
model_arima_fit = model_arima.fit()
print(model_arima_fit.aic)

predictions= model_arima_fit.forecast(steps=38)[0]
predictions

plt.plot(test)
plt.plot(predictions,color='red')

mean_squared_error(test,predictions)

##iterate model to determine best p,d,q
import itertools
p=q=range(0,21)
d=range(0,2)
pdq = list(itertools.product(p,d,q))

import warnings
warnings.filterwarnings('ignore')
for param in pdq:
    try:
        model_arima = ARIMA(train,order=param)
        model_arima_fit = model_arima.fit()
        print(param,model_arima_fit.aic)
    except:
        continue
